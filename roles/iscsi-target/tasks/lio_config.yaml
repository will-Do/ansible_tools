---
# create lio iSCSI target
- name: Check supported backstores
  fail: msg="iscsi_params.backstore_type not implement yet"
  when: iscsi_params.backstore_type != 'fileio'

- name: Create a fileio backstore
  shell: "targetcli /backstores/fileio create {{ iscsi_params.backstore_name }} {{ iscsi_params.file_name }} {{iscsi_params.file_size}}"
  register: cmd_ret
  ignore_errors: True

- name: Check create fileio backstore result
  fail: msg="{{ cmd_ret.stderr }}"
  when: cmd_ret.rc != 0 and not cmd_ret.stderr | search('already exists')

- name: Create an iSCSI target
  shell: "targetcli /iscsi/ create {{ iscsi_params.target_name }}"
  register: cmd_ret
  ignore_errors: True

- name: Check create iSCSI target result
  fail: msg="{{ cmd_ret.stderr }}"
  when: cmd_ret.rc != 0 and not cmd_ret.stderr | search('already exists')



- name: Check portal
  shell: "targetcli /iscsi/{{ iscsi_params.target_name }}/tpg1/portals ls"
  register: cmd_ret

- name: Create portal(binding to INADDR_ANY) if needed
  shell: "targetcli /iscsi/{{ iscsi_params.target_name }}/tpg1/portals/ create 0.0.0.0"
  when:  not cmd_ret.stdout | search('.*0.0.0.0.*')

- name: Create LUN
  shell: "targetcli /iscsi/{{ iscsi_params.target_name }}/tpg1/luns create /backstores/fileio/{{ iscsi_params.backstore_name }}"
  register: cmd_ret
  ignore_errors: True

- name: Check create LUN result
  fail: msg="{{ cmd_ret.stderr }}"
  when: cmd_ret.rc != 0 and not cmd_ret.stderr | search('already exists')


- name: Check firewalld state
  shell: "firewall-cmd --state"
  register: cmd_ret

- name: Enable firewalld port {{ iscsi_params.port }}
  firewalld: port="{{iscsi_params.port}}/tcp" permanent=true state=enabled
  when: cmd_ret.stdout == "running"

- name: Disable all authentications
  shell: "targetcli /iscsi/{{ iscsi_params.target_name }}/tpg1/ set attribute authentication=0 demo_mode_write_protect=0 generate_node_acls=1 cache_dynamic_acls=1"
  when: iscsi_params.authentication == 0

- name: Save targetcli configuration
  shell: "targetcli  / saveconfig"
  notify: Restart iscsid
